ДЗ17

1. Создайте 3 класса для работы в многопоточном режиме. Реализовать классы для работы с потоками тремя разными способами;
2. Создайте дополнительный класс с одной переменной и одним методом, который будет вызываться без создания экземпляра
данного класса. Этот метод должен считывать имя потока, который его обрабатывает и выводить сообщение в консоль с именем
этого потока и значением переменной данного класса, после чего инкрементировать эту переменную и отправлять результат
вызывающей стороне.
3. В методах потоков задать свои имена для идентификации и написать логику циклического прохождения (1000 итераций) и
вызова дополнительного метода описанного ранее;
4. В классе Main создать Наших три потока и запустить. Вывести в консоль результат вернувшегося значения потока, которые
 позволяет получить результат выполнения своего потока;
5. Запустить программу несколько раз - возможно, вернувшееся значение переменной, которую получит поток будет разным.
Результатом программы прикрепить либо к решению, либо в коде комментарием следующие варианты:
5.1. Какой диапазон результатов переменной возвращает поток после выполнения если программу запустить несколько раз?
(пример 3000-3000);
5.2. Какой диапазон результатов переменной возвращает поток после выполнения если предварительно методу дополнительного
класса, который вызывают все потоки добавить синхронизацию и запустить программу несколько раз? (пример 2980-3000);
5.3. Какой диапазон результатов переменной возвращает поток после выполнения если после КАЖДОГО запуска потока (start())
 указывать остальным, чтобы ждали его выполнения (join()) и программу запустить несколько раз? (пример 2500-2900);
(Значения в промерах ответов могут быть не верными)
6. Создать пример своего Deadlock-а;